{"version":3,"sources":["useTriggerSlot.js"],"sourcesContent":["import * as React from 'react';\nimport { useSetKeyboardNavigation } from '@fluentui/react-tabster';\nimport { mergeCallbacks, slot, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { getDropdownActionFromKey } from '../utils/dropdownKeyActions';\n/**\n * Shared trigger behaviour for combobox and dropdown\n * @returns trigger slot with desired behaviour and props\n */ export function useTriggerSlot(triggerSlotFromProp, ref, options) {\n    const { state: { open, setOpen, setHasFocus }, defaultProps, elementType, activeDescendantController } = options;\n    const trigger = slot.always(triggerSlotFromProp, {\n        defaultProps: {\n            type: 'text',\n            'aria-expanded': open,\n            role: 'combobox',\n            ...typeof defaultProps === 'object' && defaultProps\n        },\n        elementType\n    });\n    // handle trigger focus/blur\n    const triggerRef = React.useRef(null);\n    trigger.ref = useMergedRefs(triggerRef, trigger.ref, ref);\n    // the trigger should open/close the popup on click or blur\n    trigger.onBlur = mergeCallbacks((event)=>{\n        setOpen(event, false);\n        setHasFocus(false);\n    }, trigger.onBlur);\n    trigger.onFocus = mergeCallbacks((event)=>{\n        if (event.target === event.currentTarget) {\n            setHasFocus(true);\n        }\n    }, trigger.onFocus);\n    trigger.onClick = mergeCallbacks((event)=>{\n        setOpen(event, !open);\n    }, trigger.onClick);\n    // handle combobox keyboard interaction\n    trigger.onKeyDown = mergeCallbacks(useTriggerKeydown({\n        activeDescendantController,\n        ...options.state\n    }), trigger.onKeyDown);\n    return trigger;\n}\nfunction useTriggerKeydown(options) {\n    const { activeDescendantController, getOptionById, setOpen, selectOption, multiselect, open } = options;\n    const getActiveOption = React.useCallback(()=>{\n        const activeOptionId = activeDescendantController.active();\n        return activeOptionId ? getOptionById(activeOptionId) : undefined;\n    }, [\n        activeDescendantController,\n        getOptionById\n    ]);\n    const first = ()=>{\n        activeDescendantController.first();\n    };\n    const last = ()=>{\n        activeDescendantController.last();\n    };\n    const next = (activeOption)=>{\n        if (activeOption) {\n            activeDescendantController.next();\n        } else {\n            activeDescendantController.first();\n        }\n    };\n    const previous = (activeOption)=>{\n        if (activeOption) {\n            activeDescendantController.prev();\n        } else {\n            activeDescendantController.first();\n        }\n    };\n    const pageUp = ()=>{\n        for(let i = 0; i < 10; i++){\n            activeDescendantController.prev();\n        }\n    };\n    const pageDown = ()=>{\n        for(let i = 0; i < 10; i++){\n            activeDescendantController.next();\n        }\n    };\n    const setKeyboardNavigation = useSetKeyboardNavigation();\n    return useEventCallback((e)=>{\n        const action = getDropdownActionFromKey(e, {\n            open,\n            multiselect\n        });\n        const activeOption = getActiveOption();\n        switch(action){\n            case 'First':\n            case 'Last':\n            case 'Next':\n            case 'Previous':\n            case 'PageDown':\n            case 'PageUp':\n            case 'Open':\n            case 'Close':\n            case 'CloseSelect':\n            case 'Select':\n                e.preventDefault();\n                break;\n        }\n        setKeyboardNavigation(true);\n        switch(action){\n            case 'First':\n                first();\n                break;\n            case 'Last':\n                last();\n                break;\n            case 'Next':\n                next(activeOption);\n                break;\n            case 'Previous':\n                previous(activeOption);\n                break;\n            case 'PageDown':\n                pageDown();\n                break;\n            case 'PageUp':\n                pageUp();\n                break;\n            case 'Open':\n                setOpen(e, true);\n                break;\n            case 'Close':\n                // stop propagation for escape key to avoid dismissing any parent popups\n                e.stopPropagation();\n                setOpen(e, false);\n                break;\n            case 'CloseSelect':\n                !multiselect && !(activeOption === null || activeOption === void 0 ? void 0 : activeOption.disabled) && setOpen(e, false);\n            // fallthrough\n            case 'Select':\n                activeOption && selectOption(e, activeOption);\n                break;\n            case 'Tab':\n                !multiselect && activeOption && selectOption(e, activeOption);\n                break;\n        }\n    });\n}\n"],"names":["useTriggerSlot","triggerSlotFromProp","ref","options","state","open","setOpen","setHasFocus","defaultProps","elementType","activeDescendantController","trigger","slot","always","type","role","triggerRef","React","useRef","useMergedRefs","onBlur","mergeCallbacks","event","onFocus","target","currentTarget","onClick","onKeyDown","useTriggerKeydown","getOptionById","selectOption","multiselect","getActiveOption","useCallback","activeOptionId","active","undefined","first","last","next","activeOption","previous","prev","pageUp","i","pageDown","setKeyboardNavigation","useSetKeyboardNavigation","useEventCallback","e","action","getDropdownActionFromKey","preventDefault","stopPropagation","disabled"],"mappings":"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"}