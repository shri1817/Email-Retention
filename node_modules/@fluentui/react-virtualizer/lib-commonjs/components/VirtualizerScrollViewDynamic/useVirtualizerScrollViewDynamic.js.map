{"version":3,"sources":["useVirtualizerScrollViewDynamic.js"],"sourcesContent":["import * as React from 'react';\nimport { slot, useMergedRefs } from '@fluentui/react-utilities';\nimport { useVirtualizer_unstable } from '../Virtualizer/useVirtualizer';\nimport { useDynamicVirtualizerMeasure } from '../../Hooks';\nimport { useVirtualizerContextState_unstable, scrollToItemDynamic } from '../../Utilities';\nimport { useImperativeHandle, useState } from 'react';\nimport { useMeasureList } from '../../hooks/useMeasureList';\nimport { useDynamicVirtualizerPagination } from '../../hooks/useDynamicPagination';\nexport function useVirtualizerScrollViewDynamic_unstable(props) {\n    var _imperativeVirtualizerRef_current;\n    const contextState = useVirtualizerContextState_unstable(props.virtualizerContext);\n    const { imperativeRef, axis = 'vertical', reversed, imperativeVirtualizerRef, enablePagination = false } = props;\n    let sizeTrackingArray = React.useRef(new Array(props.numItems).fill(props.itemSize));\n    // This lets us trigger updates when a size change occurs.\n    const [sizeUpdateCount, setSizeUpdateCount] = useState(0);\n    const getChildSizeAuto = React.useCallback((index)=>{\n        if (sizeTrackingArray.current.length <= index || sizeTrackingArray.current[index] <= 0) {\n            // Default size for initial state or untracked\n            return props.itemSize;\n        }\n        /* Required to be defined prior to our measure function\n       * we use a sizing array ref that we will update post-render\n       */ return sizeTrackingArray.current[index];\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        sizeTrackingArray,\n        props.itemSize,\n        sizeUpdateCount\n    ]);\n    var _props_axis, _props_getItemSize, _contextState_contextIndex;\n    const { virtualizerLength, bufferItems, bufferSize, scrollRef } = useDynamicVirtualizerMeasure({\n        defaultItemSize: props.itemSize,\n        direction: (_props_axis = props.axis) !== null && _props_axis !== void 0 ? _props_axis : 'vertical',\n        getItemSize: (_props_getItemSize = props.getItemSize) !== null && _props_getItemSize !== void 0 ? _props_getItemSize : getChildSizeAuto,\n        currentIndex: (_contextState_contextIndex = contextState === null || contextState === void 0 ? void 0 : contextState.contextIndex) !== null && _contextState_contextIndex !== void 0 ? _contextState_contextIndex : 0,\n        numItems: props.numItems\n    });\n    const _imperativeVirtualizerRef = useMergedRefs(React.useRef(null), imperativeVirtualizerRef);\n    var _contextState_contextIndex1;\n    const paginationRef = useDynamicVirtualizerPagination({\n        axis,\n        progressiveItemSizes: (_imperativeVirtualizerRef_current = _imperativeVirtualizerRef.current) === null || _imperativeVirtualizerRef_current === void 0 ? void 0 : _imperativeVirtualizerRef_current.progressiveSizes,\n        virtualizerLength,\n        currentIndex: (_contextState_contextIndex1 = contextState === null || contextState === void 0 ? void 0 : contextState.contextIndex) !== null && _contextState_contextIndex1 !== void 0 ? _contextState_contextIndex1 : 0\n    }, enablePagination);\n    // Store the virtualizer length as a ref for imperative ref access\n    const virtualizerLengthRef = React.useRef(virtualizerLength);\n    if (virtualizerLengthRef.current !== virtualizerLength) {\n        virtualizerLengthRef.current = virtualizerLength;\n    }\n    const scrollViewRef = useMergedRefs(props.scrollViewRef, scrollRef, paginationRef);\n    const scrollCallbackRef = React.useRef(null);\n    useImperativeHandle(imperativeRef, ()=>{\n        var _imperativeVirtualizerRef_current;\n        return {\n            scrollTo (index, behavior = 'auto', callback) {\n                scrollCallbackRef.current = callback !== null && callback !== void 0 ? callback : null;\n                if (_imperativeVirtualizerRef.current) {\n                    var _imperativeVirtualizerRef_current;\n                    const progressiveSizes = _imperativeVirtualizerRef.current.progressiveSizes.current;\n                    const totalSize = progressiveSizes && (progressiveSizes === null || progressiveSizes === void 0 ? void 0 : progressiveSizes.length) > 0 ? progressiveSizes[Math.max(progressiveSizes.length - 1, 0)] : 0;\n                    _imperativeVirtualizerRef.current.setFlaggedIndex(index);\n                    scrollToItemDynamic({\n                        index,\n                        itemSizes: (_imperativeVirtualizerRef_current = _imperativeVirtualizerRef.current) === null || _imperativeVirtualizerRef_current === void 0 ? void 0 : _imperativeVirtualizerRef_current.nodeSizes,\n                        totalSize,\n                        scrollViewRef,\n                        axis,\n                        reversed,\n                        behavior\n                    });\n                }\n            },\n            currentIndex: (_imperativeVirtualizerRef_current = _imperativeVirtualizerRef.current) === null || _imperativeVirtualizerRef_current === void 0 ? void 0 : _imperativeVirtualizerRef_current.currentIndex,\n            virtualizerLength: virtualizerLengthRef\n        };\n    }, [\n        axis,\n        scrollViewRef,\n        reversed,\n        _imperativeVirtualizerRef\n    ]);\n    const handleRenderedIndex = (index)=>{\n        if (scrollCallbackRef.current) {\n            scrollCallbackRef.current(index);\n        }\n    };\n    var _props_getItemSize1;\n    const virtualizerState = useVirtualizer_unstable({\n        ...props,\n        getItemSize: (_props_getItemSize1 = props.getItemSize) !== null && _props_getItemSize1 !== void 0 ? _props_getItemSize1 : getChildSizeAuto,\n        virtualizerLength,\n        bufferItems,\n        bufferSize,\n        scrollViewRef,\n        virtualizerContext: contextState,\n        imperativeVirtualizerRef: _imperativeVirtualizerRef,\n        onRenderedFlaggedIndex: handleRenderedIndex\n    });\n    const measureObject = useMeasureList(virtualizerState.virtualizerStartIndex, virtualizerLength, props.numItems, props.itemSize);\n    if (enablePagination && measureObject.sizeUpdateCount !== sizeUpdateCount) {\n        /* This enables us to let callback know that the sizes have been updated\n    triggers a re-render but is only required on pagination (else index change handles) */ setSizeUpdateCount(measureObject.sizeUpdateCount);\n    }\n    if (axis === 'horizontal') {\n        sizeTrackingArray = measureObject.widthArray;\n    } else {\n        sizeTrackingArray = measureObject.heightArray;\n    }\n    if (!props.getItemSize) {\n        // Auto-measuring is required\n        React.Children.map(virtualizerState.virtualizedChildren, (child, index)=>{\n            if (/*#__PURE__*/ React.isValidElement(child)) {\n                virtualizerState.virtualizedChildren[index] = /*#__PURE__*/ React.createElement(child.type, {\n                    ...child.props,\n                    key: child.key,\n                    ref: (element)=>{\n                        if (child.hasOwnProperty('ref')) {\n                            // We must access this from the child directly, not props (forward ref).\n                            // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n                            const localRef = child === null || child === void 0 ? void 0 : child.ref;\n                            if (typeof localRef === 'function') {\n                                localRef(element);\n                            } else if (localRef) {\n                                localRef.current = element;\n                            }\n                        }\n                        // Call the auto-measure ref attachment.\n                        measureObject.createIndexedRef(index)(element);\n                    }\n                });\n            }\n        });\n    }\n    return {\n        ...virtualizerState,\n        components: {\n            ...virtualizerState.components,\n            container: 'div'\n        },\n        container: slot.always(props.container, {\n            defaultProps: {\n                ref: scrollViewRef\n            },\n            elementType: 'div'\n        })\n    };\n}\n"],"names":["useVirtualizerScrollViewDynamic_unstable","props","_imperativeVirtualizerRef_current","contextState","useVirtualizerContextState_unstable","virtualizerContext","imperativeRef","axis","reversed","imperativeVirtualizerRef","enablePagination","sizeTrackingArray","React","useRef","Array","numItems","fill","itemSize","sizeUpdateCount","setSizeUpdateCount","useState","getChildSizeAuto","useCallback","index","current","length","_props_axis","_props_getItemSize","_contextState_contextIndex","virtualizerLength","bufferItems","bufferSize","scrollRef","useDynamicVirtualizerMeasure","defaultItemSize","direction","getItemSize","currentIndex","contextIndex","_imperativeVirtualizerRef","useMergedRefs","_contextState_contextIndex1","paginationRef","useDynamicVirtualizerPagination","progressiveItemSizes","progressiveSizes","virtualizerLengthRef","scrollViewRef","scrollCallbackRef","useImperativeHandle","scrollTo","behavior","callback","totalSize","Math","max","setFlaggedIndex","scrollToItemDynamic","itemSizes","nodeSizes","handleRenderedIndex","_props_getItemSize1","virtualizerState","useVirtualizer_unstable","onRenderedFlaggedIndex","measureObject","useMeasureList","virtualizerStartIndex","widthArray","heightArray","Children","map","virtualizedChildren","child","isValidElement","createElement","type","key","ref","element","hasOwnProperty","localRef","createIndexedRef","components","container","slot","always","defaultProps","elementType"],"mappings":"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"}