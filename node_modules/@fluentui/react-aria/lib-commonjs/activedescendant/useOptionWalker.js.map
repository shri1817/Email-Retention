{"version":3,"sources":["useOptionWalker.js"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { isHTMLElement } from '@fluentui/react-utilities';\nexport function useOptionWalker(options) {\n    const { matchOption } = options;\n    const { targetDocument } = useFluent();\n    const treeWalkerRef = React.useRef(null);\n    const listboxRef = React.useRef(null);\n    const optionFilter = React.useCallback((node)=>{\n        if (isHTMLElement(node) && matchOption(node)) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n        return NodeFilter.FILTER_SKIP;\n    }, [\n        matchOption\n    ]);\n    const setListbox = React.useCallback((el)=>{\n        if (el && targetDocument) {\n            listboxRef.current = el;\n            treeWalkerRef.current = targetDocument.createTreeWalker(el, NodeFilter.SHOW_ELEMENT, optionFilter);\n        } else {\n            listboxRef.current = null;\n        }\n    }, [\n        targetDocument,\n        optionFilter\n    ]);\n    const optionWalker = React.useMemo(()=>({\n            first: ()=>{\n                if (!treeWalkerRef.current || !listboxRef.current) {\n                    return null;\n                }\n                treeWalkerRef.current.currentNode = listboxRef.current;\n                return treeWalkerRef.current.firstChild();\n            },\n            last: ()=>{\n                if (!treeWalkerRef.current || !listboxRef.current) {\n                    return null;\n                }\n                treeWalkerRef.current.currentNode = listboxRef.current;\n                return treeWalkerRef.current.lastChild();\n            },\n            next: ()=>{\n                if (!treeWalkerRef.current) {\n                    return null;\n                }\n                return treeWalkerRef.current.nextNode();\n            },\n            prev: ()=>{\n                if (!treeWalkerRef.current) {\n                    return null;\n                }\n                return treeWalkerRef.current.previousNode();\n            },\n            find: (predicate, startFrom)=>{\n                if (!treeWalkerRef.current || !listboxRef.current) {\n                    return null;\n                }\n                const start = startFrom ? targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(startFrom) : null;\n                treeWalkerRef.current.currentNode = start !== null && start !== void 0 ? start : listboxRef.current;\n                let cur = treeWalkerRef.current.currentNode;\n                while(cur && !predicate(cur.id)){\n                    cur = treeWalkerRef.current.nextNode();\n                }\n                return cur;\n            },\n            setCurrent: (el)=>{\n                if (!treeWalkerRef.current) {\n                    return;\n                }\n                treeWalkerRef.current.currentNode = el;\n            }\n        }), [\n        targetDocument\n    ]);\n    return {\n        optionWalker,\n        listboxCallbackRef: setListbox\n    };\n}\n"],"names":["useOptionWalker","options","matchOption","targetDocument","useFluent","treeWalkerRef","React","useRef","listboxRef","optionFilter","useCallback","node","isHTMLElement","NodeFilter","FILTER_ACCEPT","FILTER_SKIP","setListbox","el","current","createTreeWalker","SHOW_ELEMENT","optionWalker","useMemo","first","currentNode","firstChild","last","lastChild","next","nextNode","prev","previousNode","find","predicate","startFrom","start","getElementById","cur","id","setCurrent","listboxCallbackRef"],"mappings":";;;;+BAGgBA;;;eAAAA;;;;iEAHO;qCACyB;gCAClB;AACvB,SAASA,gBAAgBC,OAAO;IACnC,MAAM,EAAEC,WAAW,EAAE,GAAGD;IACxB,MAAM,EAAEE,cAAc,EAAE,GAAGC,IAAAA,uCAAS;IACpC,MAAMC,gBAAgBC,OAAMC,MAAM,CAAC;IACnC,MAAMC,aAAaF,OAAMC,MAAM,CAAC;IAChC,MAAME,eAAeH,OAAMI,WAAW,CAAC,CAACC;QACpC,IAAIC,IAAAA,6BAAa,EAACD,SAAST,YAAYS,OAAO;YAC1C,OAAOE,WAAWC,aAAa;QACnC;QACA,OAAOD,WAAWE,WAAW;IACjC,GAAG;QACCb;KACH;IACD,MAAMc,aAAaV,OAAMI,WAAW,CAAC,CAACO;QAClC,IAAIA,MAAMd,gBAAgB;YACtBK,WAAWU,OAAO,GAAGD;YACrBZ,cAAca,OAAO,GAAGf,eAAegB,gBAAgB,CAACF,IAAIJ,WAAWO,YAAY,EAAEX;QACzF,OAAO;YACHD,WAAWU,OAAO,GAAG;QACzB;IACJ,GAAG;QACCf;QACAM;KACH;IACD,MAAMY,eAAef,OAAMgB,OAAO,CAAC,IAAK,CAAA;YAChCC,OAAO;gBACH,IAAI,CAAClB,cAAca,OAAO,IAAI,CAACV,WAAWU,OAAO,EAAE;oBAC/C,OAAO;gBACX;gBACAb,cAAca,OAAO,CAACM,WAAW,GAAGhB,WAAWU,OAAO;gBACtD,OAAOb,cAAca,OAAO,CAACO,UAAU;YAC3C;YACAC,MAAM;gBACF,IAAI,CAACrB,cAAca,OAAO,IAAI,CAACV,WAAWU,OAAO,EAAE;oBAC/C,OAAO;gBACX;gBACAb,cAAca,OAAO,CAACM,WAAW,GAAGhB,WAAWU,OAAO;gBACtD,OAAOb,cAAca,OAAO,CAACS,SAAS;YAC1C;YACAC,MAAM;gBACF,IAAI,CAACvB,cAAca,OAAO,EAAE;oBACxB,OAAO;gBACX;gBACA,OAAOb,cAAca,OAAO,CAACW,QAAQ;YACzC;YACAC,MAAM;gBACF,IAAI,CAACzB,cAAca,OAAO,EAAE;oBACxB,OAAO;gBACX;gBACA,OAAOb,cAAca,OAAO,CAACa,YAAY;YAC7C;YACAC,MAAM,CAACC,WAAWC;gBACd,IAAI,CAAC7B,cAAca,OAAO,IAAI,CAACV,WAAWU,OAAO,EAAE;oBAC/C,OAAO;gBACX;gBACA,MAAMiB,QAAQD,YAAY/B,mBAAmB,QAAQA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeiC,cAAc,CAACF,aAAa;gBACrI7B,cAAca,OAAO,CAACM,WAAW,GAAGW,UAAU,QAAQA,UAAU,KAAK,IAAIA,QAAQ3B,WAAWU,OAAO;gBACnG,IAAImB,MAAMhC,cAAca,OAAO,CAACM,WAAW;gBAC3C,MAAMa,OAAO,CAACJ,UAAUI,IAAIC,EAAE,EAAE;oBAC5BD,MAAMhC,cAAca,OAAO,CAACW,QAAQ;gBACxC;gBACA,OAAOQ;YACX;YACAE,YAAY,CAACtB;gBACT,IAAI,CAACZ,cAAca,OAAO,EAAE;oBACxB;gBACJ;gBACAb,cAAca,OAAO,CAACM,WAAW,GAAGP;YACxC;QACJ,CAAA,GAAI;QACJd;KACH;IACD,OAAO;QACHkB;QACAmB,oBAAoBxB;IACxB;AACJ"}