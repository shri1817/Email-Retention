{"version":3,"sources":["useSearchBox.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  isResolvedShorthand,\n  mergeCallbacks,\n  slot,\n  useControllableState,\n  useEventCallback,\n  useMergedRefs,\n} from '@fluentui/react-utilities';\nimport { useInput_unstable } from '@fluentui/react-input';\nimport { DismissRegular, SearchRegular } from '@fluentui/react-icons';\nimport type { ExtractSlotProps } from '@fluentui/react-utilities';\nimport type { SearchBoxSlots, SearchBoxProps, SearchBoxState } from './SearchBox.types';\n\n/**\n * Create the state required to render SearchBox.\n *\n * The returned state can be modified with hooks such as useSearchBoxStyles_unstable,\n * before being passed to renderSearchBox_unstable.\n *\n * @param props - props from this instance of SearchBox\n * @param ref - reference to root HTMLElement of SearchBox\n */\nexport const useSearchBox_unstable = (props: SearchBoxProps, ref: React.Ref<HTMLInputElement>): SearchBoxState => {\n  const { size = 'medium', disabled = false, root, contentBefore, dismiss, contentAfter, ...inputProps } = props;\n\n  const searchBoxRootRef = React.useRef<HTMLDivElement>(null);\n  const searchBoxRef = React.useRef<HTMLInputElement>(null);\n\n  const [value, setValue] = useControllableState({\n    state: props.value,\n    defaultState: props.defaultValue,\n    initialState: '',\n  });\n\n  // Tracks the focus of the component for the contentAfter and dismiss button\n  const [focused, setFocused] = React.useState(false);\n\n  const onFocus = useEventCallback(() => {\n    setFocused(true);\n  });\n\n  const onBlur: React.FocusEventHandler<HTMLSpanElement> = useEventCallback(ev => {\n    setFocused(!!searchBoxRootRef.current?.contains(ev.relatedTarget));\n  });\n\n  const rootProps = slot.resolveShorthand(root);\n\n  const handleDismissClick = useEventCallback((event: React.MouseEvent<HTMLSpanElement>) => {\n    if (isResolvedShorthand(dismiss)) {\n      dismiss.onClick?.(event);\n    }\n    const newValue = '';\n    setValue(newValue);\n    props.onChange?.(event, { value: newValue });\n  });\n\n  const inputState = useInput_unstable(\n    {\n      type: 'search',\n      disabled,\n      size,\n      value,\n      root: slot.always<ExtractSlotProps<SearchBoxSlots['root']>>(\n        {\n          ...rootProps,\n          ref: useMergedRefs(rootProps?.ref, searchBoxRootRef),\n          onFocus: useEventCallback(mergeCallbacks(rootProps?.onFocus, onFocus)),\n          onBlur: useEventCallback(mergeCallbacks(rootProps?.onBlur, onBlur)),\n        },\n        {\n          elementType: 'span',\n        },\n      ),\n      contentBefore: slot.optional(contentBefore, {\n        renderByDefault: true,\n        defaultProps: {\n          children: <SearchRegular />,\n        },\n        elementType: 'span',\n      }),\n      contentAfter: slot.optional(contentAfter, {\n        renderByDefault: true,\n        elementType: 'span',\n      }),\n      ...inputProps,\n      onChange: useEventCallback(ev => {\n        const newValue = ev.target.value;\n        props.onChange?.(ev, { value: newValue });\n        setValue(newValue);\n      }),\n    },\n    useMergedRefs(searchBoxRef, ref),\n  );\n\n  const state: SearchBoxState = {\n    ...inputState,\n    components: {\n      ...inputState.components,\n      dismiss: 'span',\n    },\n    dismiss: slot.optional(dismiss, {\n      defaultProps: {\n        children: <DismissRegular />,\n        role: 'button',\n        'aria-label': 'clear',\n        tabIndex: -1,\n      },\n      renderByDefault: true,\n      elementType: 'span',\n    }),\n    disabled,\n    focused,\n    size,\n  };\n\n  if (state.dismiss) {\n    state.dismiss.onClick = handleDismissClick;\n  }\n\n  return state;\n};\n"],"names":["React","isResolvedShorthand","mergeCallbacks","slot","useControllableState","useEventCallback","useMergedRefs","useInput_unstable","DismissRegular","SearchRegular","useSearchBox_unstable","props","ref","size","disabled","root","contentBefore","dismiss","contentAfter","inputProps","searchBoxRootRef","useRef","searchBoxRef","value","setValue","state","defaultState","defaultValue","initialState","focused","setFocused","useState","onFocus","onBlur","ev","current","contains","relatedTarget","rootProps","resolveShorthand","handleDismissClick","event","onClick","newValue","onChange","inputState","type","always","elementType","optional","renderByDefault","defaultProps","children","target","components","role","tabIndex"],"mappings":"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"}