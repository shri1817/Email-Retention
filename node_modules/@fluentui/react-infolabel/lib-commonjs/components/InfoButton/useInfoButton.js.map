{"version":3,"sources":["useInfoButton.js"],"sourcesContent":["import * as React from 'react';\nimport { DefaultInfoButtonIcon12, DefaultInfoButtonIcon16, DefaultInfoButtonIcon20 } from './DefaultInfoButtonIcons';\nimport { getIntrinsicElementProps, mergeCallbacks, useControllableState, slot, useMergedRefs, elementContains, useEventCallback } from '@fluentui/react-utilities';\nimport { Popover, PopoverSurface } from '@fluentui/react-popover';\nconst infoButtonIconMap = {\n    small: /*#__PURE__*/ React.createElement(DefaultInfoButtonIcon12, null),\n    medium: /*#__PURE__*/ React.createElement(DefaultInfoButtonIcon16, null),\n    large: /*#__PURE__*/ React.createElement(DefaultInfoButtonIcon20, null)\n};\nconst popoverSizeMap = {\n    small: 'small',\n    medium: 'small',\n    large: 'medium'\n};\n/**\n * Create the state required to render InfoButton.\n *\n * The returned state can be modified with hooks such as useInfoButtonStyles_unstable,\n * before being passed to renderInfoButton_unstable.\n *\n * @param props - props from this instance of InfoButton\n * @param ref - reference to root HTMLButtonElement of InfoButton\n */ export const useInfoButton_unstable = (props, ref)=>{\n    const { size = 'medium', inline = true } = props;\n    const rootRef = useMergedRefs(ref);\n    const state = {\n        inline,\n        size,\n        components: {\n            root: 'button',\n            popover: Popover,\n            info: PopoverSurface\n        },\n        root: slot.always(getIntrinsicElementProps('button', {\n            children: infoButtonIconMap[size],\n            type: 'button',\n            'aria-label': 'information',\n            ...props,\n            ref: rootRef\n        }), {\n            elementType: 'button'\n        }),\n        popover: slot.always(props.popover, {\n            defaultProps: {\n                inline,\n                positioning: 'above-start',\n                size: popoverSizeMap[size],\n                withArrow: true\n            },\n            elementType: Popover\n        }),\n        info: slot.always(props.info, {\n            defaultProps: {\n                role: 'note',\n                tabIndex: -1\n            },\n            elementType: PopoverSurface\n        })\n    };\n    const [popoverOpen, setPopoverOpen] = useControllableState({\n        state: state.popover.open,\n        defaultState: state.popover.defaultOpen,\n        initialState: false\n    });\n    state.popover.open = popoverOpen;\n    state.popover.onOpenChange = mergeCallbacks(state.popover.onOpenChange, (e, data)=>setPopoverOpen(data.open));\n    const infoRef = useMergedRefs(state.info.ref);\n    state.info.ref = infoRef;\n    // Hide the popover when focus moves out of the button and popover\n    const onBlurButtonOrInfo = (e)=>{\n        const nextFocused = e.relatedTarget;\n        if (rootRef.current !== nextFocused && !elementContains(infoRef.current, nextFocused)) {\n            setPopoverOpen(false);\n        }\n    };\n    state.root.onBlur = useEventCallback(mergeCallbacks(state.root.onBlur, onBlurButtonOrInfo));\n    state.info.onBlurCapture = useEventCallback(mergeCallbacks(state.info.onBlurCapture, onBlurButtonOrInfo));\n    return state;\n};\n"],"names":["useInfoButton_unstable","infoButtonIconMap","small","React","createElement","DefaultInfoButtonIcon12","medium","DefaultInfoButtonIcon16","large","DefaultInfoButtonIcon20","popoverSizeMap","props","ref","size","inline","rootRef","useMergedRefs","state","components","root","popover","Popover","info","PopoverSurface","slot","always","getIntrinsicElementProps","children","type","elementType","defaultProps","positioning","withArrow","role","tabIndex","popoverOpen","setPopoverOpen","useControllableState","open","defaultState","defaultOpen","initialState","onOpenChange","mergeCallbacks","e","data","infoRef","onBlurButtonOrInfo","nextFocused","relatedTarget","current","elementContains","onBlur","useEventCallback","onBlurCapture"],"mappings":";;;;+BAsBiBA;;;eAAAA;;;;iEAtBM;wCACmE;gCAC6C;8BAC/F;AACxC,MAAMC,oBAAoB;IACtBC,OAAO,WAAW,GAAGC,OAAMC,aAAa,CAACC,+CAAuB,EAAE;IAClEC,QAAQ,WAAW,GAAGH,OAAMC,aAAa,CAACG,+CAAuB,EAAE;IACnEC,OAAO,WAAW,GAAGL,OAAMC,aAAa,CAACK,+CAAuB,EAAE;AACtE;AACA,MAAMC,iBAAiB;IACnBR,OAAO;IACPI,QAAQ;IACRE,OAAO;AACX;AASW,MAAMR,yBAAyB,CAACW,OAAOC;IAC9C,MAAM,EAAEC,OAAO,QAAQ,EAAEC,SAAS,IAAI,EAAE,GAAGH;IAC3C,MAAMI,UAAUC,IAAAA,6BAAa,EAACJ;IAC9B,MAAMK,QAAQ;QACVH;QACAD;QACAK,YAAY;YACRC,MAAM;YACNC,SAASC,qBAAO;YAChBC,MAAMC,4BAAc;QACxB;QACAJ,MAAMK,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAAC,UAAU;YACjDC,UAAU1B,iBAAiB,CAACY,KAAK;YACjCe,MAAM;YACN,cAAc;YACd,GAAGjB,KAAK;YACRC,KAAKG;QACT,IAAI;YACAc,aAAa;QACjB;QACAT,SAASI,oBAAI,CAACC,MAAM,CAACd,MAAMS,OAAO,EAAE;YAChCU,cAAc;gBACVhB;gBACAiB,aAAa;gBACblB,MAAMH,cAAc,CAACG,KAAK;gBAC1BmB,WAAW;YACf;YACAH,aAAaR,qBAAO;QACxB;QACAC,MAAME,oBAAI,CAACC,MAAM,CAACd,MAAMW,IAAI,EAAE;YAC1BQ,cAAc;gBACVG,MAAM;gBACNC,UAAU,CAAC;YACf;YACAL,aAAaN,4BAAc;QAC/B;IACJ;IACA,MAAM,CAACY,aAAaC,eAAe,GAAGC,IAAAA,oCAAoB,EAAC;QACvDpB,OAAOA,MAAMG,OAAO,CAACkB,IAAI;QACzBC,cAActB,MAAMG,OAAO,CAACoB,WAAW;QACvCC,cAAc;IAClB;IACAxB,MAAMG,OAAO,CAACkB,IAAI,GAAGH;IACrBlB,MAAMG,OAAO,CAACsB,YAAY,GAAGC,IAAAA,8BAAc,EAAC1B,MAAMG,OAAO,CAACsB,YAAY,EAAE,CAACE,GAAGC,OAAOT,eAAeS,KAAKP,IAAI;IAC3G,MAAMQ,UAAU9B,IAAAA,6BAAa,EAACC,MAAMK,IAAI,CAACV,GAAG;IAC5CK,MAAMK,IAAI,CAACV,GAAG,GAAGkC;IACjB,kEAAkE;IAClE,MAAMC,qBAAqB,CAACH;QACxB,MAAMI,cAAcJ,EAAEK,aAAa;QACnC,IAAIlC,QAAQmC,OAAO,KAAKF,eAAe,CAACG,IAAAA,+BAAe,EAACL,QAAQI,OAAO,EAAEF,cAAc;YACnFZ,eAAe;QACnB;IACJ;IACAnB,MAAME,IAAI,CAACiC,MAAM,GAAGC,IAAAA,gCAAgB,EAACV,IAAAA,8BAAc,EAAC1B,MAAME,IAAI,CAACiC,MAAM,EAAEL;IACvE9B,MAAMK,IAAI,CAACgC,aAAa,GAAGD,IAAAA,gCAAgB,EAACV,IAAAA,8BAAc,EAAC1B,MAAMK,IAAI,CAACgC,aAAa,EAAEP;IACrF,OAAO9B;AACX"}